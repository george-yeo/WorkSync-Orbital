{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useProfile = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n  const update = async (email, username, displayname, gender) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/update/' + user._id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        email,\n        username,\n        displayname,\n        gender\n      })\n    });\n  };\n  const get = async () => {\n    const response = await fetch(`/api/user/getUser/` + user._id, {\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const json = await response.json();\n    return json;\n  };\n  return {\n    update,\n    get,\n    isLoading,\n    error\n  };\n};\n_s(useProfile, \"Zhtb7k7z2cuQ/HBU43TDJ4cIACE=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useProfile","_s","error","setError","isLoading","setIsLoading","user","update","email","username","displayname","gender","response","fetch","_id","method","headers","token","body","JSON","stringify","get","ok","Error","json"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/hooks/useProfile.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useProfile = ( ) => {\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(null)\r\n  const { user } = useAuthContext()\r\n\r\n\r\n  const update = async (email, username, displayname, gender) => {\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n\r\n    const response = await fetch('/api/user/update/' + user._id, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${user.token}`\r\n      },\r\n      body: JSON.stringify({ email, username, displayname, gender})\r\n    })\r\n  }\r\n\r\n  const get = async () => {\r\n    const response = await fetch(`/api/user/getUser/` + user._id, {\r\n      headers: {'Authorization': `Bearer ${user.token}`},\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n\r\n    const json = await response.json()\r\n    return json;\r\n  }\r\n\r\n  return { update, get, isLoading, error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAO;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAK,CAAC,GAAGP,cAAc,CAAC,CAAC;EAGjC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,KAAK;IAE7DN,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAGd,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,GAAGP,IAAI,CAACQ,GAAG,EAAE;MAC3DC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASV,IAAI,CAACW,KAAM;MACxC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK;QAAEC,QAAQ;QAAEC,WAAW;QAAEC;MAAM,CAAC;IAC9D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,GAAG,GAAG,MAAAA,CAAA,KAAY;IACtB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,oBAAmB,GAAGP,IAAI,CAACQ,GAAG,EAAE;MAC5DE,OAAO,EAAE;QAAC,eAAe,EAAG,UAASV,IAAI,CAACW,KAAM;MAAC;IACnD,CAAC,CAAC;IAEF,IAAI,CAACL,QAAQ,CAACU,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAOA,IAAI;EACb,CAAC;EAED,OAAO;IAAEjB,MAAM;IAAEc,GAAG;IAAEjB,SAAS;IAAEF;EAAM,CAAC;AAC1C,CAAC;AAAAD,EAAA,CApCYD,UAAU;EAAA,QAGJD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}