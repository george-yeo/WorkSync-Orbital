{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\pages\\\\Group.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useGroupContext } from \"../hooks/useGroupContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport GroupForm from \"../components/GroupForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Group = () => {\n  _s();\n  const {\n    state: groupState,\n    dispatch\n  } = useGroupContext();\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const response = await fetch('api/groups/' + user._id, {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_SECTIONS',\n          payload: json\n        });\n      }\n    };\n    if (user) {\n      fetchGroups();\n    }\n  }, [user, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GroupForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups-list\",\n      children: groupState.groups && groupState.groups.length > 0 ? groupState.groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No groups to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Group, \"JPBfJKFPiw8YZxP3EufuWIk5bq0=\", false, function () {\n  return [useGroupContext, useAuthContext];\n});\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["useEffect","useState","useGroupContext","useAuthContext","GroupForm","jsxDEV","_jsxDEV","Group","_s","state","groupState","dispatch","user","fetchGroups","response","fetch","_id","headers","token","json","ok","type","payload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","groups","length","map","group","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/pages/Group.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useGroupContext } from \"../hooks/useGroupContext\"\r\nimport { useAuthContext } from \"../hooks/useAuthContext\"\r\n\r\nimport GroupForm from \"../components/GroupForm\"\r\n\r\nconst Group = () => {\r\n    const { state: groupState, dispatch } = useGroupContext();\r\n    const { user } = useAuthContext()\r\n\r\n    useEffect(() => {\r\n        const fetchGroups = async () => {\r\n            const response = await fetch ('api/groups/' + user._id, {\r\n                headers: {'Authorization': `Bearer ${user.token}`},\r\n            })\r\n            const json = await response.json()\r\n\r\n            if (response.ok) {\r\n                dispatch({type: 'SET_SECTIONS', payload: json})\r\n            }\r\n        }\r\n        if (user) {\r\n            fetchGroups()\r\n        }\r\n    },[user, dispatch])\r\n\r\n    return(\r\n        <div>\r\n            <GroupForm/>\r\n            <div className=\"groups-list\">\r\n                {groupState.groups && groupState.groups.length > 0 ? (\r\n                    groupState.groups.map((group) => (\r\n                        <div key={group.id} className=\"group-item\">\r\n                            <h3>{group.name}</h3>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No groups to display</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Group"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AAExD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,KAAK,EAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGT,eAAe,CAAC,CAAC;EACzD,MAAM;IAAEU;EAAK,CAAC,GAAGT,cAAc,CAAC,CAAC;EAEjCH,SAAS,CAAC,MAAM;IACZ,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAa,GAAGH,IAAI,CAACI,GAAG,EAAE;QACpDC,OAAO,EAAE;UAAC,eAAe,EAAG,UAASL,IAAI,CAACM,KAAM;QAAC;MACrD,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACbT,QAAQ,CAAC;UAACU,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAEH;QAAI,CAAC,CAAC;MACnD;IACJ,CAAC;IACD,IAAIP,IAAI,EAAE;MACNC,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAC,CAACD,IAAI,EAAED,QAAQ,CAAC,CAAC;EAEnB,oBACIL,OAAA;IAAAiB,QAAA,gBACIjB,OAAA,CAACF,SAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACZrB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAL,QAAA,EACvBb,UAAU,CAACmB,MAAM,IAAInB,UAAU,CAACmB,MAAM,CAACC,MAAM,GAAG,CAAC,GAC9CpB,UAAU,CAACmB,MAAM,CAACE,GAAG,CAAEC,KAAK,iBACxB1B,OAAA;QAAoBsB,SAAS,EAAC,YAAY;QAAAL,QAAA,eACtCjB,OAAA;UAAAiB,QAAA,EAAKS,KAAK,CAACC;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADfK,KAAK,CAACE,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACR,CAAC,gBAEFrB,OAAA;QAAAiB,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAnB,EAAA,CApCKD,KAAK;EAAA,QACiCL,eAAe,EACtCC,cAAc;AAAA;AAAAgC,EAAA,GAF7B5B,KAAK;AAsCX,eAAeA,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}