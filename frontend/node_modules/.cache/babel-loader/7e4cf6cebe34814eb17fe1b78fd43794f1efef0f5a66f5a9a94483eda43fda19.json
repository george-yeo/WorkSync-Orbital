{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\components\\\\group-page\\\\MembersModal.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGroupContext } from \"../../hooks/useGroupContext\";\nimport { useGroupPageContext } from \"../../hooks/useGroupPageContext\";\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\nimport Modal from 'react-modal';\nimport Member from \"./Member\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MembersModal = ({\n  isOpen,\n  setIsMembersOpen,\n  canManage\n}) => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    groups,\n    dispatch\n  } = useGroupContext();\n  const groupPageContext = useGroupPageContext();\n  const [addUserStatus, setAddUserStatus] = useState(null);\n  const [usernameToAdd, setUsernameToAdd] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [inviteRequests, setInviteRequests] = useState([]);\n  const [loadingInvite, setLoadingInvite] = useState(true);\n  const [error, setError] = useState(null);\n  const [joinRequests, setJoinRequests] = useState([]);\n  const [loadingRequests, setLoadingRequests] = useState(true);\n  const [requestActionStatus, setrequestActionStatus] = useState(null);\n  const [requestError, setRequestError] = useState(null);\n  const group = groupPageContext.group;\n  const handleApproveRequest = async requester => {\n    try {\n      const response = await fetch(`/api/group/acceptUser/${group._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          user_id: requester._id\n        })\n      });\n      if (response.ok) {\n        const updatedGroup = structuredClone(group);\n        updatedGroup.requestID = updatedGroup.requestID.filter(u => u._id != requester._id);\n        updatedGroup.membersID = [...updatedGroup.membersID, requester];\n        dispatch({\n          type: 'UPDATE_GROUP',\n          payload: updatedGroup\n        });\n        groupPageContext.dispatch({\n          type: 'SET_GROUP',\n          payload: updatedGroup\n        });\n        setrequestActionStatus({\n          success: true,\n          message: 'Request approved'\n        });\n      } else {\n        const error = await response.json();\n        setrequestActionStatus({\n          success: false,\n          message: `Failed to approve Request: ${error.message}`\n        });\n      }\n    } catch (error) {\n      console.error(\"Error approving Request:\", error);\n      setrequestActionStatus({\n        success: false,\n        message: `Failed to approve Request: ${error.message}`\n      });\n    }\n  };\n  const handleRejectRequest = async requester => {\n    try {\n      const response = await fetch(`/api/group/rejectUser/${group._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          user_id: requester._id\n        })\n      });\n      if (response.ok) {\n        const updatedGroup = structuredClone(group);\n        updatedGroup.requestID = updatedGroup.requestID.filter(u => u._id != requester._id);\n        dispatch({\n          type: 'UPDATE_GROUP',\n          payload: updatedGroup\n        });\n        groupPageContext.dispatch({\n          type: 'SET_GROUP',\n          payload: updatedGroup\n        });\n        setrequestActionStatus({\n          success: true,\n          message: 'Request denied'\n        });\n      } else {\n        const error = await response.json();\n        setrequestActionStatus({\n          success: false,\n          message: `Failed to deny Request: ${error.message}`\n        });\n      }\n    } catch (error) {\n      console.error(\"Error approving Request:\", error);\n      setrequestActionStatus({\n        success: false,\n        message: `Failed to deny Request: ${error.message}`\n      });\n    }\n  };\n\n  // useEffect(() => {\n  //     if (!canManage) return\n\n  //     const fetchInviteRequests = async () => {\n  //         if(!user){\n  //             return\n  //         }\n  //         try {\n  //             const response = await fetch(`/api/group/invite`, {\n  //                 headers: {'Authorization': `Bearer ${user.token}`},\n  //             })\n  //             const json = await response.json()\n  //             if(!response.ok){\n  //                 setError(json.message)\n  //             } else {\n  //                 setInviteRequests(json);\n  //             }\n  //         } catch (error) {\n  //             setError(\"Failed to fetch invite requests\")\n  //         } finally {\n  //             setLoadingInvite(false)\n  //         }\n  //     }\n\n  //     const fetchJoinRequests = async () => {\n  //         if(!user){\n  //             return\n  //         }\n  //         try {\n  //             const response = await fetch(`/api/group/request`, {\n  //                 headers: {'Authorization': `Bearer ${user.token}`},\n  //             })\n  //             const json = await response.json()\n  //             if(!response.ok){\n  //                 setRequestError(json.message)\n  //             } else {\n  //                 setJoinRequests(json);\n  //             }\n  //         } catch (error) {\n  //             setRequestError(\"Failed to fetch join requests\")\n  //         } finally {\n  //             setLoadingRequests(false)\n  //         }\n  //     }\n\n  //     fetchInviteRequests()\n  //     fetchJoinRequests()\n  // }, [user])\n\n  let inviteContainer, requestContainer;\n  if (canManage) {\n    const handleSearchSubmit = async e => {\n      e.preventDefault();\n      if (!user || !usernameToAdd) return;\n      try {\n        const response = await fetch(`/api/user/search/${usernameToAdd}`, {\n          headers: {\n            'Authorization': `Bearer ${user.token}`\n          }\n        });\n        const json = await response.json();\n        if (response.ok) {\n          setSearchResults(json.filter(user => group.membersID.findIndex(u => user._id == u._id) < 0 && user._id != group.createdByID._id));\n        } else {\n          console.error(\"Error searching user:\", json.message);\n        }\n      } catch (error) {\n        console.error(\"Failed to search user:\", error);\n      }\n    };\n    const handleAddUserSubmit = async userIDToAdd => {\n      if (!user) return;\n      try {\n        // // Fetch the user ID based on the username to add\n        // const response = await fetch(`/api/user/search/` + usernameToAdd, {\n        //     headers: { 'Authorization': `Bearer ${user.token}` }\n        // });\n\n        // const json = await response.json();\n        // if (json.length === 0) {\n        //     throw new Error(\"User not found\");\n        // }\n\n        // const userIDToAdd = json[0]._id;\n\n        // Add the user to the group\n        const responseAdd = await fetch(`/api/group/add/` + group._id, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${user.token}`\n          },\n          body: JSON.stringify({\n            user_id: userIDToAdd\n          })\n        });\n        const updatedGroup = await responseAdd.json();\n        if (responseAdd.ok) {\n          // Dispatch the updated group which should include both membersID and pendingID\n          dispatch({\n            type: 'UPDATE_GROUP',\n            payload: updatedGroup\n          });\n          groupPageContext.dispatch({\n            type: 'SET_GROUP',\n            payload: updatedGroup\n          });\n          setAddUserStatus({\n            success: true\n          });\n        } else {\n          console.error(\"Error adding user to group:\", updatedGroup.error);\n          setAddUserStatus({\n            success: false,\n            message: updatedGroup.error\n          });\n        }\n      } catch (error) {\n        console.error(\"Failed to add user to group:\", error);\n        setAddUserStatus({\n          success: false,\n          message: error.message\n        });\n      } finally {\n        setUsernameToAdd('');\n      }\n    };\n    const handleRevokeInviteSubmit = async userIDToRevoke => {\n      if (!user) return;\n      try {\n        // Add the user to the group\n        const responseAdd = await fetch(`/api/group/revoke/` + group._id, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${user.token}`\n          },\n          body: JSON.stringify({\n            user_id: userIDToRevoke\n          })\n        });\n        const updatedGroup = await responseAdd.json();\n        if (responseAdd.ok) {\n          // Dispatch the updated group which should include both membersID and pendingID\n          dispatch({\n            type: 'UPDATE_GROUP',\n            payload: updatedGroup\n          });\n          groupPageContext.dispatch({\n            type: 'SET_GROUP',\n            payload: updatedGroup\n          });\n          setAddUserStatus({\n            success: true\n          });\n        } else {\n          console.error(\"Error revoke invite:\", updatedGroup.error);\n          setAddUserStatus({\n            success: false,\n            message: updatedGroup.error\n          });\n        }\n      } catch (error) {\n        console.error(\"Failed to revoke invite:\", error);\n        setAddUserStatus({\n          success: false,\n          message: error.message\n        });\n      }\n    };\n    let pendingInvites;\n    if (group != null && group.pendingID.length > 0) {\n      pendingInvites = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pending Invitations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"members\",\n            children: group.pendingID.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-result\",\n              children: /*#__PURE__*/_jsxDEV(Member, {\n                group: group,\n                member: user,\n                isInvite: true,\n                handleRevokeInviteSubmit: handleRevokeInviteSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this);\n    }\n    inviteContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [pendingInvites, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Invite User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearchSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: usernameToAdd,\n            onChange: e => setUsernameToAdd(e.target.value),\n            placeholder: \"Enter username here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), searchResults && searchResults.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Nothing found here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this), searchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Search Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-result\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"members\",\n              children: /*#__PURE__*/_jsxDEV(Member, {\n                group: group,\n                member: user,\n                isSearchInvite: true,\n                handleAddUserSubmit: handleAddUserSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), addUserStatus && addUserStatus.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${addUserStatus.success ? 'success' : 'error'}`,\n        children: addUserStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this);\n    const joinRequests = group.requestID;\n    if (joinRequests.length > 0) {\n      requestContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Requesting to Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), joinRequests.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"members\",\n            children: /*#__PURE__*/_jsxDEV(Member, {\n              group: group,\n              member: user,\n              isRequest: true,\n              handleApproveRequest: handleApproveRequest,\n              handleRejectRequest: handleRejectRequest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this)), requestActionStatus && requestActionStatus.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-message ${requestActionStatus.success ? 'success' : 'error'}`,\n          children: requestActionStatus.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this);\n    } else {\n      requestContainer = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  return isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content group-members\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-btn\",\n        onClick: () => setIsMembersOpen(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"members\",\n        children: [/*#__PURE__*/_jsxDEV(Member, {\n          group: group,\n          member: group.createdByID,\n          role: \"Owner\",\n          canManage: canManage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), group.membersID.map(member => /*#__PURE__*/_jsxDEV(Member, {\n          group: group,\n          member: member,\n          canManage: canManage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 54\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), requestContainer, inviteContainer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 19\n  }, this);\n};\n_s(MembersModal, \"2ImTsRq1fFUu/Obir4sNYjwi8r0=\", false, function () {\n  return [useAuthContext, useGroupContext, useGroupPageContext];\n});\n_c = MembersModal;\nexport default MembersModal;\nvar _c;\n$RefreshReg$(_c, \"MembersModal\");","map":{"version":3,"names":["useEffect","useState","useParams","useGroupContext","useGroupPageContext","useAuthContext","Modal","Member","jsxDEV","_jsxDEV","MembersModal","isOpen","setIsMembersOpen","canManage","_s","user","groups","dispatch","groupPageContext","addUserStatus","setAddUserStatus","usernameToAdd","setUsernameToAdd","searchResults","setSearchResults","inviteRequests","setInviteRequests","loadingInvite","setLoadingInvite","error","setError","joinRequests","setJoinRequests","loadingRequests","setLoadingRequests","requestActionStatus","setrequestActionStatus","requestError","setRequestError","group","handleApproveRequest","requester","response","fetch","_id","method","headers","token","body","JSON","stringify","user_id","ok","updatedGroup","structuredClone","requestID","filter","u","membersID","type","payload","success","message","json","console","handleRejectRequest","inviteContainer","requestContainer","handleSearchSubmit","e","preventDefault","findIndex","createdByID","handleAddUserSubmit","userIDToAdd","responseAdd","handleRevokeInviteSubmit","userIDToRevoke","pendingInvites","pendingID","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","member","isInvite","onSubmit","value","onChange","target","placeholder","isSearchInvite","isRequest","onClick","role","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/components/group-page/MembersModal.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGroupContext } from \"../../hooks/useGroupContext\";\r\nimport { useGroupPageContext } from \"../../hooks/useGroupPageContext\";\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\r\nimport Modal from 'react-modal';\r\n\r\nimport Member from \"./Member\";\r\n\r\nconst MembersModal = ({ isOpen, setIsMembersOpen, canManage }) => {\r\n    const { user } = useAuthContext();\r\n    const { groups, dispatch } = useGroupContext();\r\n    const groupPageContext = useGroupPageContext();\r\n\r\n    const [addUserStatus, setAddUserStatus] = useState(null);\r\n    const [usernameToAdd, setUsernameToAdd] = useState('');\r\n    const [searchResults, setSearchResults] = useState(null);\r\n    \r\n    const [inviteRequests, setInviteRequests] = useState([]);\r\n    const [loadingInvite, setLoadingInvite] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [joinRequests, setJoinRequests] = useState([]);\r\n    const [loadingRequests, setLoadingRequests] = useState(true);\r\n    const [requestActionStatus, setrequestActionStatus] = useState(null);\r\n    const [requestError, setRequestError] = useState(null);\r\n\r\n    const group = groupPageContext.group;\r\n\r\n    const handleApproveRequest = async (requester) => {\r\n        try{\r\n            const response = await fetch(`/api/group/acceptUser/${group._id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`\r\n                },\r\n                body: JSON.stringify({ user_id: requester._id })\r\n            })\r\n\r\n            if (response.ok) {\r\n                const updatedGroup = structuredClone(group)\r\n                updatedGroup.requestID = updatedGroup.requestID.filter(u => u._id != requester._id)\r\n                updatedGroup.membersID = [...updatedGroup.membersID, requester]\r\n                dispatch({ type: 'UPDATE_GROUP', payload: updatedGroup });\r\n                groupPageContext.dispatch({ type: 'SET_GROUP', payload: updatedGroup });\r\n                setrequestActionStatus({ success: true, message: 'Request approved' });\r\n            } else {\r\n                const error = await response.json();\r\n                setrequestActionStatus({ success: false, message: `Failed to approve Request: ${error.message}` });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error approving Request:\", error);\r\n            setrequestActionStatus({ success: false, message: `Failed to approve Request: ${error.message}` });\r\n        }\r\n    }\r\n\r\n    const handleRejectRequest = async (requester) => {\r\n        try{\r\n            const response = await fetch(`/api/group/rejectUser/${group._id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`\r\n                },\r\n                body: JSON.stringify({ user_id: requester._id })\r\n            })\r\n\r\n            if (response.ok) {\r\n                const updatedGroup = structuredClone(group)\r\n                updatedGroup.requestID = updatedGroup.requestID.filter(u => u._id != requester._id)\r\n                dispatch({ type: 'UPDATE_GROUP', payload: updatedGroup });\r\n                groupPageContext.dispatch({ type: 'SET_GROUP', payload: updatedGroup });\r\n                setrequestActionStatus({ success: true, message: 'Request denied' });\r\n            } else {\r\n                const error = await response.json();\r\n                setrequestActionStatus({ success: false, message: `Failed to deny Request: ${error.message}` });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error approving Request:\", error);\r\n            setrequestActionStatus({ success: false, message: `Failed to deny Request: ${error.message}` });\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (!canManage) return\r\n\r\n    //     const fetchInviteRequests = async () => {\r\n    //         if(!user){\r\n    //             return\r\n    //         }\r\n    //         try {\r\n    //             const response = await fetch(`/api/group/invite`, {\r\n    //                 headers: {'Authorization': `Bearer ${user.token}`},\r\n    //             })\r\n    //             const json = await response.json()\r\n    //             if(!response.ok){\r\n    //                 setError(json.message)\r\n    //             } else {\r\n    //                 setInviteRequests(json);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             setError(\"Failed to fetch invite requests\")\r\n    //         } finally {\r\n    //             setLoadingInvite(false)\r\n    //         }\r\n    //     }\r\n\r\n    //     const fetchJoinRequests = async () => {\r\n    //         if(!user){\r\n    //             return\r\n    //         }\r\n    //         try {\r\n    //             const response = await fetch(`/api/group/request`, {\r\n    //                 headers: {'Authorization': `Bearer ${user.token}`},\r\n    //             })\r\n    //             const json = await response.json()\r\n    //             if(!response.ok){\r\n    //                 setRequestError(json.message)\r\n    //             } else {\r\n    //                 setJoinRequests(json);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             setRequestError(\"Failed to fetch join requests\")\r\n    //         } finally {\r\n    //             setLoadingRequests(false)\r\n    //         }\r\n    //     }\r\n\r\n    //     fetchInviteRequests()\r\n    //     fetchJoinRequests()\r\n    // }, [user])\r\n\r\n    let inviteContainer, requestContainer;\r\n\r\n    if (canManage) {\r\n        const handleSearchSubmit = async (e) => {\r\n            e.preventDefault();\r\n            if (!user || !usernameToAdd) return;\r\n    \r\n            try {\r\n                const response = await fetch(`/api/user/search/${usernameToAdd}`, {\r\n                    headers: { 'Authorization': `Bearer ${user.token}` }\r\n                });\r\n    \r\n                const json = await response.json();\r\n    \r\n                if (response.ok) {\r\n                    setSearchResults(json.filter(user => group.membersID.findIndex(u => user._id == u._id) < 0 && user._id != group.createdByID._id));\r\n                } else {\r\n                    console.error(\"Error searching user:\", json.message);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to search user:\", error);\r\n            }\r\n        };\r\n\r\n        const handleAddUserSubmit = async (userIDToAdd) => {\r\n            if (!user) return;\r\n    \r\n            try {\r\n                // // Fetch the user ID based on the username to add\r\n                // const response = await fetch(`/api/user/search/` + usernameToAdd, {\r\n                //     headers: { 'Authorization': `Bearer ${user.token}` }\r\n                // });\r\n    \r\n                // const json = await response.json();\r\n                // if (json.length === 0) {\r\n                //     throw new Error(\"User not found\");\r\n                // }\r\n    \r\n                // const userIDToAdd = json[0]._id;\r\n    \r\n                // Add the user to the group\r\n                const responseAdd = await fetch(`/api/group/add/` + group._id, {\r\n                    method: 'PATCH',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${user.token}`\r\n                    },\r\n                    body: JSON.stringify({ user_id: userIDToAdd })\r\n                });\r\n    \r\n                const updatedGroup = await responseAdd.json();\r\n                \r\n                if (responseAdd.ok) {\r\n                    // Dispatch the updated group which should include both membersID and pendingID\r\n                    dispatch({ type: 'UPDATE_GROUP', payload: updatedGroup });\r\n                    groupPageContext.dispatch({ type: 'SET_GROUP', payload: updatedGroup });\r\n                    setAddUserStatus({ success: true });\r\n                } else {\r\n                    console.error(\"Error adding user to group:\", updatedGroup.error);\r\n                    setAddUserStatus({ success: false, message: updatedGroup.error });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to add user to group:\", error);\r\n                setAddUserStatus({ success: false, message: error.message });\r\n            } finally {          \r\n                setUsernameToAdd('');\r\n            }\r\n        };\r\n\r\n        const handleRevokeInviteSubmit = async (userIDToRevoke) => {\r\n            if (!user) return;\r\n    \r\n            try {\r\n                // Add the user to the group\r\n                const responseAdd = await fetch(`/api/group/revoke/` + group._id, {\r\n                    method: 'PATCH',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${user.token}`\r\n                    },\r\n                    body: JSON.stringify({ user_id: userIDToRevoke })\r\n                });\r\n    \r\n                const updatedGroup = await responseAdd.json();\r\n                \r\n                if (responseAdd.ok) {\r\n                    // Dispatch the updated group which should include both membersID and pendingID\r\n                    dispatch({ type: 'UPDATE_GROUP', payload: updatedGroup });\r\n                    groupPageContext.dispatch({ type: 'SET_GROUP', payload: updatedGroup });\r\n                    setAddUserStatus({ success: true });\r\n                } else {\r\n                    console.error(\"Error revoke invite:\", updatedGroup.error);\r\n                    setAddUserStatus({ success: false, message: updatedGroup.error });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to revoke invite:\", error);\r\n                setAddUserStatus({ success: false, message: error.message });\r\n            }\r\n        };\r\n\r\n        let pendingInvites;\r\n        \r\n        if (group != null && group.pendingID.length > 0) {\r\n            pendingInvites = (\r\n                <div>\r\n                    <h2>Pending Invitations</h2>\r\n                    <div className=\"search-results\">\r\n                        <ul className=\"members\">\r\n                            {group.pendingID.map(user => (\r\n                                <div className=\"search-result\">\r\n                                    <Member group={group} member={user} isInvite={true} handleRevokeInviteSubmit={handleRevokeInviteSubmit}/>\r\n                                    {/* <button className=\"delete-btn\" onClick={() => handleRevokeInviteSubmit(user._id)}>Revoke</button> */}\r\n                                </div>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        inviteContainer = (\r\n            <div>\r\n                {pendingInvites}\r\n                <h2>Invite User</h2>\r\n                <form onSubmit={handleSearchSubmit}>\r\n                    <div className=\"search-user\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={usernameToAdd}\r\n                            onChange={(e) => setUsernameToAdd(e.target.value)}\r\n                            placeholder=\"Enter username here...\"\r\n                        />\r\n                        <button className=\"add-btn\">Search</button>\r\n                    </div>\r\n                    {searchResults && searchResults.length == 0 && (\r\n                        <div className=\"search-results\">\r\n                            <h3>Search Results:</h3>\r\n                            <div>\r\n                                Nothing found here...\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {searchResults && searchResults.length > 0 && (\r\n                        <div className=\"search-results\">\r\n                            <h3>Search Results:</h3>\r\n                            {searchResults.map(user => (\r\n                                <div className=\"search-result\">\r\n                                    <ul className=\"members\">\r\n                                        <Member group={group} member={user} isSearchInvite={true} handleAddUserSubmit={handleAddUserSubmit}/>\r\n                                        {/* {group.pendingID.findIndex((u) => u._id == user._id) < 0 && <button className=\"add-btn\" onClick={() => handleAddUserSubmit(user._id)}>Invite</button>}\r\n                                        {group.pendingID.findIndex((u) => u._id == user._id) >= 0 && <div>Invite sent!</div>} */}\r\n                                    </ul>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </form>\r\n                {addUserStatus && addUserStatus.message && (\r\n                    <div className={`status-message ${addUserStatus.success ? 'success' : 'error'}`}>\r\n                        {addUserStatus.message}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n\r\n        const joinRequests = group.requestID\r\n        if (joinRequests.length > 0) {\r\n            requestContainer = (\r\n                <div>\r\n                    <h2>Requesting to Join</h2>\r\n                    {joinRequests.map(user => (\r\n                        <div className=\"search-result\">\r\n                            <ul className=\"members\">\r\n                                <Member group={group} member={user} isRequest={true} handleApproveRequest={handleApproveRequest} handleRejectRequest={handleRejectRequest}/>\r\n                                {/* <div className=\"kick-actions\">\r\n                                    <button className=\"add-btn\" onClick={() => handleApproveRequest(user)}>Accept</button>\r\n                                    <button className=\"delete-btn\" onClick={() => handleRejectRequest(user)}>Deny</button>\r\n                                </div> */}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                    {requestActionStatus && requestActionStatus.message && (\r\n                        <div className={`status-message ${requestActionStatus.success ? 'success' : 'error'}`}>\r\n                            {requestActionStatus.message}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n        } else {\r\n            requestContainer = (\r\n                <div/>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        isOpen && <div className=\"popup-form\">\r\n            <div className=\"popup-content group-members\">\r\n                <h2 className=\"title\">Members</h2>\r\n                <span className=\"close-btn\" onClick={() => setIsMembersOpen(false)}>&times;</span>\r\n                <ul className=\"members\">\r\n                    <Member group={group} member={group.createdByID} role=\"Owner\" canManage={canManage} />\r\n                    {group.membersID.map((member) => <Member group={group} member={member} canManage={canManage}/>)}\r\n                </ul>\r\n                {requestContainer}\r\n                {inviteContainer}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MembersModal"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}