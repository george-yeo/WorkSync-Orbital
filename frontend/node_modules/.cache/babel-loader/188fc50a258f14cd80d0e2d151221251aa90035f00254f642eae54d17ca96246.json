{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState(0);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const task = {\n      title,\n      description,\n      deadline,\n      isCompleted: false\n    };\n    const response = await fetch('/api/tasks', {\n      method: 'POST',\n      body: JSON.stringify(task),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setTitle('');\n      setDescription('');\n      setDeadline(0);\n      setError(null);\n      console.log(\"new task added\", json);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Task Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setDescription(e.target.value),\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Deadline: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      onChange: e => setDeadline(e.target.value),\n      value: deadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"QYeD6Pjat0t2Wp80QYA+Gl8Jc5k=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","description","setDescription","deadline","setDeadline","error","setError","handleSubmit","e","preventDefault","task","isCompleted","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/components/TaskForm.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nconst TaskForm = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [deadline, setDeadline] = useState(0)\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const task = {title, description, deadline, isCompleted: false}\r\n\r\n        const response = await fetch('/api/tasks', {\r\n            method: 'POST',\r\n            body: JSON.stringify(task),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n        }\r\n        if (response.ok) {\r\n            setTitle('')\r\n            setDescription('')\r\n            setDeadline(0)\r\n            setError(null)\r\n            console.log(\"new task added\", json)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"create\" onSubmit={handleSubmit}>\r\n            <h3>Add a new Task</h3>\r\n\r\n            <label>Task Name: </label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n            />\r\n\r\n            <label>Description: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    value={description}\r\n                />\r\n\r\n            <label>Deadline: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    onChange={(e) => setDeadline(e.target.value)}\r\n                    value={deadline}\r\n                />\r\n\r\n            <button>Add Task</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}