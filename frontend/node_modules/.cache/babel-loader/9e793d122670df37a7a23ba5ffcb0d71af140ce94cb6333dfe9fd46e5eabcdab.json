{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\pages\\\\GroupPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGroupPageContext } from \"../hooks/useGroupPageContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport Modal from 'react-modal';\n\n//import GroupDetail from \"../components/GroupDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupPage = () => {\n  _s();\n  const {\n    id: groupId\n  } = useParams();\n  const {\n    user\n  } = useAuthContext();\n  const groupPageContext = useGroupPageContext();\n  useEffect(() => {\n    const fetchGroupDetail = async () => {\n      if (!user || !groupId) return;\n      try {\n        const response = await fetch(`/api/group/` + groupId, {\n          headers: {\n            'Authorization': `Bearer ${user.token}`\n          }\n        });\n        const json = await response.json();\n        if (response.ok) {\n          groupPageContext.dispatch({\n            type: 'SET_GROUP',\n            payload: json\n          });\n        } else {\n          console.error(\"Error fetching group:\", json.message);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch group:\", error);\n      }\n    };\n    if (user) {\n      fetchGroupDetail();\n    }\n  }, [user]);\n  const group = groupPageContext.group;\n  const handleOnClickPlantTree = async () => {\n    try {\n      const response = await fetch(`/api/group/plant-tree/` + groupId, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      if (response.ok) {\n        if (json) {\n          groupPageContext.dispatch({\n            type: 'PLANT_TREE',\n            payload: json\n          });\n        }\n      } else {\n        console.error(\"Error fetching group:\", json.message);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch group:\", error);\n    }\n  };\n  let growthPic = \"sprout\";\n  if (group && group.treeGrowthProgress > 50) {\n    growthPic = \"sapling\";\n  }\n  return group ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: group.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), group.isGrowingTree == false && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: handleOnClickPlantTree,\n      children: \"Plant a Tree!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"synctree\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"SyncTrees Grown: \" + group.treesGrown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), group.isGrowingTree == true && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Growth - \" + group.treeGrowthProgress + \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 49\n      }, this), group.isGrowingTree == false && group.treesGrown > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"tree\",\n        src: \"../tree.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 74\n      }, this), group.isGrowingTree == true && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"tree\",\n        src: \"../\" + growthPic + \".png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"soil\",\n        src: \"../soil.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        children: \"View Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), group.createdByID._id == user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        children: \"Manage Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupPage, \"aV9/vGDqok76r2+a/PRz0UfQ+gI=\", false, function () {\n  return [useParams, useAuthContext, useGroupPageContext];\n});\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["useEffect","useState","useParams","useGroupPageContext","useAuthContext","Modal","jsxDEV","_jsxDEV","GroupPage","_s","id","groupId","user","groupPageContext","fetchGroupDetail","response","fetch","headers","token","json","ok","dispatch","type","payload","console","error","message","group","handleOnClickPlantTree","method","log","growthPic","treeGrowthProgress","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","isGrowingTree","onClick","treesGrown","src","createdByID","_id","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/pages/GroupPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGroupPageContext } from \"../hooks/useGroupPageContext\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport Modal from 'react-modal';\r\n\r\n//import GroupDetail from \"../components/GroupDetail\";\r\n\r\nconst GroupPage = () => {\r\n    const { id: groupId } = useParams()\r\n    const { user } = useAuthContext();\r\n    const groupPageContext = useGroupPageContext();\r\n    \r\n    useEffect(() => {\r\n        const fetchGroupDetail = async () => {\r\n            if (!user || !groupId) return;\r\n\r\n            try {\r\n                const response = await fetch(`/api/group/` + groupId, {\r\n                    headers: { 'Authorization': `Bearer ${user.token}` },\r\n                });\r\n\r\n                const json = await response.json();\r\n                \r\n                if (response.ok) {\r\n                    groupPageContext.dispatch({ type: 'SET_GROUP', payload: json });\r\n                } else {\r\n                    console.error(\"Error fetching group:\", json.message);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch group:\", error);\r\n            }\r\n        };\r\n\r\n        if (user) {\r\n            fetchGroupDetail();\r\n        }\r\n    }, [user]);\r\n\r\n    const group = groupPageContext.group\r\n\r\n    const handleOnClickPlantTree = async () => {\r\n        try {\r\n            const response = await fetch(`/api/group/plant-tree/` + groupId, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${user.token}`\r\n                },\r\n            });\r\n\r\n            const json = await response.json();\r\n            console.log(json)\r\n            if (response.ok) {\r\n                if (json) {\r\n                    groupPageContext.dispatch({ type: 'PLANT_TREE', payload: json });\r\n                }\r\n            } else {\r\n                console.error(\"Error fetching group:\", json.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch group:\", error);\r\n        }\r\n    }\r\n\r\n    let growthPic = \"sprout\"\r\n    if (group && group.treeGrowthProgress > 50) {\r\n        growthPic = \"sapling\"\r\n    }\r\n\r\n    return (\r\n        group ?\r\n        <div className=\"group-page\">\r\n            <h1>{group.name}</h1>\r\n            {group.isGrowingTree == false && <button className=\"add-btn\" onClick={handleOnClickPlantTree}>Plant a Tree!</button>}\r\n            <div className=\"synctree\">\r\n                <h3>{\"SyncTrees Grown: \" + group.treesGrown}</h3>\r\n                {group.isGrowingTree == true && <h3>{\"Growth - \" + group.treeGrowthProgress + \"%\"}</h3>}\r\n                {group.isGrowingTree == false && group.treesGrown > 0 && <img className=\"tree\" src=\"../tree.png\"></img>}\r\n                {group.isGrowingTree == true && <img className=\"tree\" src={\"../\"+growthPic+\".png\"}></img>}\r\n                <img className=\"soil\" src=\"../soil.png\"></img>\r\n            </div>\r\n            <div className=\"group-actions\">\r\n                <button className=\"add-btn\" >View Members</button>\r\n                <button className=\"add-btn\">Add Comment</button>\r\n                {group.createdByID._id == user._id && <button className=\"add-btn\">Manage Group</button>}\r\n            </div>\r\n        </div> :\r\n        <div></div>\r\n    );\r\n};\r\n\r\nexport default GroupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}