{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\components\\\\JoinGroup.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useGroupContext } from \"../hooks/useGroupContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinGroup = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    groups,\n    dispatch\n  } = useGroupContext();\n  const [isSearchGroupModalOpen, setIsSearchGroupModalOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [lastSearched, setLastSearched] = useState('');\n  //const [searchResults, setSearchResults] = useState([]);\n  const [requestStatus, setRequestStatus] = useState('');\n\n  // Handle Search Group Button Click\n  const handleSearchGroupClick = () => {\n    setIsSearchGroupModalOpen(true);\n    setSearchQuery(null);\n    //setSearchResults([])\n    setRequestStatus(null);\n  };\n\n  // Function to handle the search request\n  const handleSearchSubmit = async e => {\n    e.preventDefault();\n    if (!user) return;\n    if (searchQuery == lastSearched) return;\n    setLastSearched(searchQuery);\n    if (!searchQuery || searchQuery == '') {\n      dispatch({\n        type: 'SET_SEARCH_RESULTS',\n        payload: null\n      });\n      return;\n    }\n    try {\n      const response = await fetch(`/api/group/search/${searchQuery}`, {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_SEARCH_RESULTS',\n          payload: json\n        });\n      } else {\n        console.error(\"Error searching groups:\", json.message);\n      }\n    } catch (error) {\n      console.error(\"Failed to search groups:\", error);\n    }\n  };\n\n  // // Function to handle request to join a group\n  // const handleRequestJoin = async (groupId) => {\n  //     if (!user) return;\n\n  //     try {\n  //         const response = await fetch(`/api/group/join/${groupId}`, {\n  //             method: 'PATCH',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //                 'Authorization': `Bearer ${user.token}`\n  //             },\n  //             body: JSON.stringify({ user_id: user._id })\n  //         });\n\n  //         const json = await response.json();\n\n  //         if (response.ok) {\n  //             setRequestStatus({ success: true, message: \"Request to join sent successfully!\" });\n  //             // Optionally, clear search results\n  //             setSearchResults([]);\n  //         } else {\n  //             setRequestStatus({ success: false, message: json.error });\n  //         }\n  //     } catch (error) {\n  //         console.error(\"Failed to send request to join group:\", error);\n  //         setRequestStatus({ success: false, message: error.message });\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-search\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchSubmit,\n      onBlur: handleSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search...\",\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"material-symbols-outlined search\",\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  //     <div>\n  //         {/* Button to open the search modal */}\n  //         <button className=\"search-group-btn\" onClick={handleSearchGroupClick}>Search & Request to Join Group</button>\n\n  //         {/* Search Group Modal */}\n  //         <Modal\n  //             isOpen={isSearchGroupModalOpen}\n  //             onRequestClose={() => setIsSearchGroupModalOpen(false)}\n  //             contentLabel=\"Search Group\"\n  //             className=\"searchGroup-popup-form\"\n  //             ariaHideApp={false}\n  //         >\n  //             <h2>Search for a Group</h2>\n  //             <span className=\"close-btn\" onClick={() => setIsSearchGroupModalOpen(false)}>&times;</span>\n  //             <form onSubmit={handleSearchSubmit}>\n  //                 <label>\n  //                     Group Name:\n  //                     <input\n  //                         type=\"text\"\n  //                         value={searchQuery}\n  //                         onChange={(e) => setSearchQuery(e.target.value)}\n  //                         required\n  //                     />\n  //                 </label>\n  //                 <div className=\"modal-buttons\">\n  //                     <button type=\"submit\">Search</button>\n  //                 </div>\n  //             </form>\n\n  //             {/* Display search results */}\n  //             {searchResults.length > 0 && (\n  //                 <div className=\"search-results\">\n  //                     <h3>Search Results:</h3>\n  //                     <div>\n  //                         {searchResults.map(group => (\n  //                             <p key={group._id}>\n  //                                 {group.name}\n  //                                 <button className=\"join-group-btn\" onClick={() => handleRequestJoin(group._id)}>Request</button>\n  //                             </p>\n  //                         ))}\n  //                     </div>\n  //                 </div>\n  //             )}\n\n  //             {/* Display request status */}\n  //             {requestStatus && (\n  //                 <p className={requestStatus.success ? \"status-success\" : \"status-error\"}>\n  //                     {requestStatus.message}\n  //                 </p>\n  //             )}\n  //         </Modal>\n  //     </div>\n  // );\n};\n_s(JoinGroup, \"5bPQ6xnllcpqmjw4wAPjyiuyBZM=\", false, function () {\n  return [useAuthContext, useGroupContext];\n});\n_c = JoinGroup;\nexport default JoinGroup;\nvar _c;\n$RefreshReg$(_c, \"JoinGroup\");","map":{"version":3,"names":["useState","Modal","useAuthContext","useGroupContext","jsxDEV","_jsxDEV","JoinGroup","_s","user","groups","dispatch","isSearchGroupModalOpen","setIsSearchGroupModalOpen","searchQuery","setSearchQuery","lastSearched","setLastSearched","requestStatus","setRequestStatus","handleSearchGroupClick","handleSearchSubmit","e","preventDefault","type","payload","response","fetch","headers","token","json","ok","console","error","message","className","children","onSubmit","onBlur","onChange","target","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/components/JoinGroup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useGroupContext } from \"../hooks/useGroupContext\";\r\n\r\nconst JoinGroup = () => {\r\n    const { user } = useAuthContext();\r\n    const { groups, dispatch } = useGroupContext();\r\n    const [isSearchGroupModalOpen, setIsSearchGroupModalOpen] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [lastSearched, setLastSearched] = useState('');\r\n    //const [searchResults, setSearchResults] = useState([]);\r\n    const [requestStatus, setRequestStatus] = useState('');\r\n\r\n    // Handle Search Group Button Click\r\n    const handleSearchGroupClick = () => {\r\n        setIsSearchGroupModalOpen(true);\r\n        setSearchQuery(null)\r\n        //setSearchResults([])\r\n        setRequestStatus(null)\r\n    };\r\n\r\n    // Function to handle the search request\r\n    const handleSearchSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!user) return;\r\n\r\n        if (searchQuery == lastSearched) return\r\n\r\n        setLastSearched(searchQuery)\r\n        \r\n        if (!searchQuery || searchQuery == '') {\r\n            dispatch({ type: 'SET_SEARCH_RESULTS', payload: null });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`/api/group/search/${searchQuery}`, {\r\n                headers: { 'Authorization': `Bearer ${user.token}` }\r\n            });\r\n\r\n            const json = await response.json();\r\n\r\n            if (response.ok) {\r\n                dispatch({ type: 'SET_SEARCH_RESULTS', payload: json });\r\n            } else {\r\n                console.error(\"Error searching groups:\", json.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to search groups:\", error);\r\n        }\r\n    };\r\n\r\n    // // Function to handle request to join a group\r\n    // const handleRequestJoin = async (groupId) => {\r\n    //     if (!user) return;\r\n\r\n    //     try {\r\n    //         const response = await fetch(`/api/group/join/${groupId}`, {\r\n    //             method: 'PATCH',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //                 'Authorization': `Bearer ${user.token}`\r\n    //             },\r\n    //             body: JSON.stringify({ user_id: user._id })\r\n    //         });\r\n\r\n    //         const json = await response.json();\r\n\r\n    //         if (response.ok) {\r\n    //             setRequestStatus({ success: true, message: \"Request to join sent successfully!\" });\r\n    //             // Optionally, clear search results\r\n    //             setSearchResults([]);\r\n    //         } else {\r\n    //             setRequestStatus({ success: false, message: json.error });\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error(\"Failed to send request to join group:\", error);\r\n    //         setRequestStatus({ success: false, message: error.message });\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div className=\"chat-search\">\r\n            <form onSubmit={handleSearchSubmit} onBlur={handleSearchSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    placeholder=\"Search...\"\r\n                    value={searchQuery}\r\n                />\r\n                <button className=\"material-symbols-outlined search\">search</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {/* Button to open the search modal */}\r\n    //         <button className=\"search-group-btn\" onClick={handleSearchGroupClick}>Search & Request to Join Group</button>\r\n\r\n    //         {/* Search Group Modal */}\r\n    //         <Modal\r\n    //             isOpen={isSearchGroupModalOpen}\r\n    //             onRequestClose={() => setIsSearchGroupModalOpen(false)}\r\n    //             contentLabel=\"Search Group\"\r\n    //             className=\"searchGroup-popup-form\"\r\n    //             ariaHideApp={false}\r\n    //         >\r\n    //             <h2>Search for a Group</h2>\r\n    //             <span className=\"close-btn\" onClick={() => setIsSearchGroupModalOpen(false)}>&times;</span>\r\n    //             <form onSubmit={handleSearchSubmit}>\r\n    //                 <label>\r\n    //                     Group Name:\r\n    //                     <input\r\n    //                         type=\"text\"\r\n    //                         value={searchQuery}\r\n    //                         onChange={(e) => setSearchQuery(e.target.value)}\r\n    //                         required\r\n    //                     />\r\n    //                 </label>\r\n    //                 <div className=\"modal-buttons\">\r\n    //                     <button type=\"submit\">Search</button>\r\n    //                 </div>\r\n    //             </form>\r\n\r\n    //             {/* Display search results */}\r\n    //             {searchResults.length > 0 && (\r\n    //                 <div className=\"search-results\">\r\n    //                     <h3>Search Results:</h3>\r\n    //                     <div>\r\n    //                         {searchResults.map(group => (\r\n    //                             <p key={group._id}>\r\n    //                                 {group.name}\r\n    //                                 <button className=\"join-group-btn\" onClick={() => handleRequestJoin(group._id)}>Request</button>\r\n    //                             </p>\r\n    //                         ))}\r\n    //                     </div>\r\n    //                 </div>\r\n    //             )}\r\n\r\n    //             {/* Display request status */}\r\n    //             {requestStatus && (\r\n    //                 <p className={requestStatus.success ? \"status-success\" : \"status-error\"}>\r\n    //                     {requestStatus.message}\r\n    //                 </p>\r\n    //             )}\r\n    //         </Modal>\r\n    //     </div>\r\n    // );\r\n};\r\n\r\nexport default JoinGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}