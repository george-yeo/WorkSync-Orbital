{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\components\\\\chat-components\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from '../../hooks/useAuthContext';\nimport { useChatContext } from '../../hooks/useChatContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageInput = ({\n  channel,\n  setChannel\n}) => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const chatContext = useChatContext();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(null);\n  const [isSending, setIsSending] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    if (!message) {\n      return;\n    }\n    setMessage('');\n    setIsSending(true);\n    let url;\n    if (chatContext.directTarget == null) {\n      url = '/api/chats/gm/' + channel._id;\n    } else {\n      url = '/api/chats/dm/' + chatContext.directTarget;\n    }\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        message\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setError(null);\n      if (json.channel) {\n        chatContext.dispatch({\n          type: 'UPDATE_CHANNEL',\n          payload: json.channel\n        });\n        setChannel(json.channel);\n      }\n      chatContext.dispatch({\n        type: 'UPDATE_MESSAGES',\n        payload: json.message\n      });\n    }\n    setIsSending(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setMessage(e.target.value),\n        value: message,\n        className: \"chat-message-input\",\n        placeholder: \"Enter your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"material-symbols-outlined send\",\n        children: !isSending ? \"send\" : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./loading-circle.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"qcFAWjNFzgDp7GBhV0KHjbDXI6c=\", false, function () {\n  return [useAuthContext, useChatContext];\n});\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["useState","useAuthContext","useChatContext","jsxDEV","_jsxDEV","MessageInput","channel","setChannel","_s","user","chatContext","message","setMessage","error","setError","isSending","setIsSending","handleSubmit","e","preventDefault","url","directTarget","_id","response","fetch","method","body","JSON","stringify","headers","token","json","ok","dispatch","type","payload","children","onSubmit","className","onChange","target","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/components/chat-components/MessageInput.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useAuthContext } from '../../hooks/useAuthContext'\r\nimport { useChatContext } from '../../hooks/useChatContext'\r\n\r\nconst MessageInput = ({ channel, setChannel }) => {\r\n  const { user } = useAuthContext()\r\n  const chatContext = useChatContext()\r\n  const [message, setMessage] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const [isSending, setIsSending] = useState(false)\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (!user) {\r\n      setError('You must be logged in')\r\n      return\r\n    }\r\n    \r\n    if (!message) {\r\n      return\r\n    }\r\n\r\n    setMessage('')\r\n    setIsSending(true)\r\n\r\n    let url\r\n    if (chatContext.directTarget == null) {\r\n      url = '/api/chats/gm/' + channel._id\r\n    } else {\r\n      url = '/api/chats/dm/' + chatContext.directTarget\r\n    }\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ message }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${user.token}`\r\n      }\r\n    })\r\n    \r\n    const json = await response.json()\r\n    \r\n    if (!response.ok) {\r\n      setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n      setError(null)\r\n      if (json.channel) {\r\n        chatContext.dispatch({type: 'UPDATE_CHANNEL', payload: json.channel})\r\n        setChannel(json.channel)\r\n      }\r\n      chatContext.dispatch({type: 'UPDATE_MESSAGES', payload: json.message})\r\n    }\r\n\r\n    setIsSending(false)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className=\"chat-message-form\">\r\n        <input\r\n        type=\"text\"\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        value={message}\r\n        className=\"chat-message-input\"\r\n        placeholder=\"Enter your message here...\"\r\n        />\r\n        <button className=\"material-symbols-outlined send\">\r\n          {!isSending ? \"send\" :\r\n            <img src=\"./loading-circle.gif\"/>\r\n          }\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageInput"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}