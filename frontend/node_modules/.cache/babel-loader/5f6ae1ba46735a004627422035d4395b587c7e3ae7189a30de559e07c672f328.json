{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\components\\\\SectionForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSectionContext } from \"../hooks/useSectionContext\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectionForm = ({\n  section\n}) => {\n  _s();\n  const {\n    dispatch\n  } = useSectionContext();\n  const {\n    user\n  } = useAuthContext();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    const section = {\n      title\n    };\n    const response = await fetch('/api/sections', {\n      method: 'POST',\n      body: JSON.stringify(section),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setTitle('');\n      setError(null);\n      setEmptyFields([]);\n      dispatch({\n        type: 'CREATE_SECTION',\n        payload: json\n      });\n      console.log(\"new section added\", json);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create section-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Section Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : '',\n      placeholder: \"Enter name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(SectionForm, \"2iZjea/+qSCKYZgG4e7N96fw7DQ=\", false, function () {\n  return [useSectionContext, useAuthContext];\n});\n_c = SectionForm;\nexport default SectionForm;\nvar _c;\n$RefreshReg$(_c, \"SectionForm\");","map":{"version":3,"names":["useState","useSectionContext","useAuthContext","jsxDEV","_jsxDEV","SectionForm","section","_s","dispatch","user","title","setTitle","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","token","json","ok","type","payload","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/components/SectionForm.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useSectionContext } from \"../hooks/useSectionContext\"\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n\r\nconst SectionForm = ({ section }) => {\r\n    const { dispatch } = useSectionContext()\r\n    const { user } = useAuthContext()\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [error, setError] = useState(null)\r\n    const [emptyFields, setEmptyFields] = useState([])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!user) {\r\n            setError('You must be logged in')\r\n            return\r\n        }\r\n\r\n        const section = {title}\r\n\r\n        const response = await fetch('/api/sections', {\r\n            method: 'POST',\r\n            body: JSON.stringify(section),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n            setEmptyFields(json.emptyFields)\r\n        }\r\n        if (response.ok) {\r\n            setTitle('')\r\n            setError(null)\r\n            setEmptyFields([])\r\n            dispatch({type: 'CREATE_SECTION', payload: json})\r\n            console.log(\"new section added\", json)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"create section-form\" onSubmit={handleSubmit}>\r\n            <h3>Add a new Section</h3>\r\n\r\n            <label>Section Name: </label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                value={title}\r\n                className={emptyFields.includes('title') ? 'error' : ''}\r\n                placeholder=\"Enter name...\"\r\n            />\r\n\r\n            <button>Add Section</button>\r\n            {error && <div className='error'>{error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SectionForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}