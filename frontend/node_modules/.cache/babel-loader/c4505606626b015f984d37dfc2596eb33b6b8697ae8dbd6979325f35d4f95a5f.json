{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\components\\\\ChatBar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useChatContext } from '../hooks/useChatContext';\n\n// components\nimport Search from './chat-components/Search';\nimport Channels from './chat-components/Channels';\nimport ChannelHeader from './chat-components/ChannelHeader';\nimport Messages from './chat-components/Messages';\nimport MessageInput from './chat-components/MessageInput';\nimport NoChatSelected from './chat-components/NoChatSelected';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBar = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const chatContext = useChatContext();\n  const [channel, setChannel] = useState(null);\n  const [error, setError] = useState(null);\n  const selectChannel = async newChannel => {\n    if (newChannel == channel) return;\n    if (newChannel.type === \"direct\") {\n      for (const i in newChannel.participants) {\n        const receiver = newChannel.participants[i];\n        if (receiver._id !== user._id) {\n          chatContext.dispatch({\n            type: 'SET_DIRECT',\n            payload: receiver._id\n          });\n        }\n      }\n    }\n    setChannel(newChannel);\n    fetchSelectedChannel(newChannel._id);\n  };\n  const fetchSelectedChannel = async channelId => {\n    const response = await fetch(`/api/chats/` + channelId, {\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      setError(null);\n      chatContext.dispatch({\n        type: 'SET_MESSAGES',\n        payload: json\n      });\n    } else {\n      setError(json.error);\n    }\n  };\n  useEffect(() => {\n    const fetchChannels = async () => {\n      const response = await fetch(`/api/chats/recent`, {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        setError(null);\n        chatContext.dispatch({\n          type: 'SET_CHANNELS',\n          payload: json,\n          isRecent: true\n        });\n      } else {\n        setError(json.error);\n      }\n    };\n    if (user) {\n      fetchChannels();\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-channels\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Channels, {\n          channels: chatContext.channels,\n          selectChannel: selectChannel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-chat\",\n        children: [channel && /*#__PURE__*/_jsxDEV(ChannelHeader, {\n          channel: channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), channel && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            channel: channel,\n            messages: chatContext.messages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), channel && /*#__PURE__*/_jsxDEV(MessageInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), !channel && /*#__PURE__*/_jsxDEV(NoChatSelected, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBar, \"QtrL1ZAvMnNhwRvfsIN13oLR6Lg=\", false, function () {\n  return [useAuthContext, useChatContext];\n});\n_c = ChatBar;\nexport default ChatBar;\nvar _c;\n$RefreshReg$(_c, \"ChatBar\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","useChatContext","Search","Channels","ChannelHeader","Messages","MessageInput","NoChatSelected","jsxDEV","_jsxDEV","ChatBar","_s","user","chatContext","channel","setChannel","error","setError","selectChannel","newChannel","type","i","participants","receiver","_id","dispatch","payload","fetchSelectedChannel","channelId","response","fetch","headers","token","json","ok","fetchChannels","isRecent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","channels","messages","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/components/ChatBar.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\nimport { useChatContext } from '../hooks/useChatContext'\r\n\r\n// components\r\nimport Search from './chat-components/Search';\r\nimport Channels from './chat-components/Channels';\r\nimport ChannelHeader from './chat-components/ChannelHeader';\r\nimport Messages from './chat-components/Messages';\r\nimport MessageInput from './chat-components/MessageInput'\r\nimport NoChatSelected from './chat-components/NoChatSelected'\r\n\r\nconst ChatBar = () => {\r\n  const { user } = useAuthContext()\r\n  const chatContext = useChatContext()\r\n\r\n  const [channel, setChannel] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const selectChannel = async (newChannel) => {\r\n    if (newChannel == channel) return\r\n    if (newChannel.type === \"direct\") {\r\n      for (const i in newChannel.participants) {\r\n        const receiver = newChannel.participants[i]\r\n        if (receiver._id !== user._id) {\r\n          chatContext.dispatch({type: 'SET_DIRECT', payload: receiver._id})\r\n        }\r\n      }\r\n    }\r\n    setChannel(newChannel)\r\n    fetchSelectedChannel(newChannel._id)\r\n  }\r\n\r\n  const fetchSelectedChannel = async (channelId) => {\r\n    const response = await fetch(`/api/chats/` + channelId, {\r\n      headers: {'Authorization': `Bearer ${user.token}`},\r\n    })\r\n    \r\n    const json = await response.json()\r\n\r\n    if (response.ok) {\r\n      setError(null)\r\n      chatContext.dispatch({type: 'SET_MESSAGES', payload: json})\r\n    } else {\r\n      setError(json.error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchChannels = async () => {\r\n      const response = await fetch(`/api/chats/recent`, {\r\n        headers: {'Authorization': `Bearer ${user.token}`},\r\n      })\r\n      \r\n      const json = await response.json()\r\n      \r\n      if (response.ok) {\r\n        setError(null)\r\n        chatContext.dispatch({type: 'SET_CHANNELS', payload: json, isRecent: true})\r\n      } else {\r\n        setError(json.error)\r\n      }\r\n    }\r\n\r\n    if (user) {\r\n      fetchChannels()\r\n    }\r\n  }, [user])\r\n\r\n  return (\r\n    <div className=\"container chat\">\r\n        <div className='chat-header'>\r\n          <h4>Chat</h4>\r\n        </div>\r\n        <div className=\"chat-contents\">\r\n          <div className='chat-channels'>\r\n            <Search />\r\n            <Channels channels={chatContext.channels} selectChannel={selectChannel}/>\r\n          </div>\r\n          <div className='chat-chat'>\r\n            {channel && <ChannelHeader channel={channel} />}\r\n            {channel && <div className='messages'>\r\n              <Messages channel={channel} messages={chatContext.messages} />\r\n            </div>}\r\n            {channel && <MessageInput />}\r\n            {!channel && <NoChatSelected />}\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatBar"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}