{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Tao\\\\Documents\\\\GitHub\\\\WorkSync-Orbital\\\\frontend\\\\src\\\\context\\\\SectionContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SectionContext = /*#__PURE__*/createContext();\nexport const sectionsReducer = (state, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return {\n        sections: null\n      };\n    case 'SET_SECTIONS':\n      return {\n        sections: action.payload\n      };\n    case 'CREATE_SECTION':\n      return {\n        sections: [action.payload, ...state.sections]\n      };\n    case 'UPDATE_SECTION':\n      // Ensure payload is an array\n      const updatedSections = (Array.isArray(action.payload) ? action.payload : [action.payload]).reduce((acc, section) => {\n        const index = acc.findIndex(s => s._id === section._id);\n        if (index >= 0) {\n          acc[index] = section; // Update existing section\n        } else {\n          acc.push(section); // Add new section\n        }\n        return acc;\n      }, [...state.sections]);\n      return {\n        sections: updatedSections\n      };\n    case 'DELETE_SECTION':\n      return {\n        sections: state.sections.filter(section => section._id !== action.payload._id)\n      };\n    default:\n      return state;\n  }\n};\nexport const SectionContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(sectionsReducer, {\n    sections: null\n  });\n  return /*#__PURE__*/_jsxDEV(SectionContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(SectionContextProvider, \"T3lh6l4wgyK4ltdpnA7fFdc/GWs=\");\n_c = SectionContextProvider;\nvar _c;\n$RefreshReg$(_c, \"SectionContextProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","SectionContext","sectionsReducer","state","action","type","sections","payload","updatedSections","Array","isArray","reduce","acc","section","index","findIndex","s","_id","push","filter","SectionContextProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yi Tao/Documents/GitHub/WorkSync-Orbital/frontend/src/context/SectionContext.js"],"sourcesContent":["import { createContext, useReducer } from \"react\"\r\n\r\nexport const SectionContext = createContext()\r\n\r\nexport const sectionsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'RESET':\r\n            return {\r\n                sections: null\r\n            }\r\n        case 'SET_SECTIONS':\r\n            return {\r\n                sections: action.payload\r\n            }\r\n        case 'CREATE_SECTION':\r\n            return {\r\n                sections: [action.payload, ...state.sections]\r\n            }\r\n        case 'UPDATE_SECTION':\r\n            // Ensure payload is an array\r\n            const updatedSections = (Array.isArray(action.payload) ? action.payload : [action.payload]).reduce((acc, section) => {\r\n                const index = acc.findIndex(s => s._id === section._id);\r\n                if (index >= 0) {\r\n                    acc[index] = section; // Update existing section\r\n                } else {\r\n                    acc.push(section); // Add new section\r\n                }\r\n                return acc;\r\n            }, [...state.sections]);\r\n            return {\r\n                sections: updatedSections\r\n            }\r\n        case 'DELETE_SECTION':\r\n            return {\r\n                sections: state.sections.filter((section) => section._id !== action.payload._id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SectionContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(sectionsReducer, {\r\n        sections: null\r\n    })\r\n\r\n    return (\r\n        <SectionContext.Provider value={{ ...state, dispatch }}>\r\n            {children}\r\n        </SectionContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMK,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,OAAO;MACR,OAAO;QACHC,QAAQ,EAAE;MACd,CAAC;IACL,KAAK,cAAc;MACf,OAAO;QACHA,QAAQ,EAAEF,MAAM,CAACG;MACrB,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACHD,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAO,EAAE,GAAGJ,KAAK,CAACG,QAAQ;MAChD,CAAC;IACL,KAAK,gBAAgB;MACjB;MACA,MAAME,eAAe,GAAG,CAACC,KAAK,CAACC,OAAO,CAACN,MAAM,CAACG,OAAO,CAAC,GAAGH,MAAM,CAACG,OAAO,GAAG,CAACH,MAAM,CAACG,OAAO,CAAC,EAAEI,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACjH,MAAMC,KAAK,GAAGF,GAAG,CAACG,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKJ,OAAO,CAACI,GAAG,CAAC;QACvD,IAAIH,KAAK,IAAI,CAAC,EAAE;UACZF,GAAG,CAACE,KAAK,CAAC,GAAGD,OAAO,CAAC,CAAC;QAC1B,CAAC,MAAM;UACHD,GAAG,CAACM,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC;QACvB;QACA,OAAOD,GAAG;MACd,CAAC,EAAE,CAAC,GAAGT,KAAK,CAACG,QAAQ,CAAC,CAAC;MACvB,OAAO;QACHA,QAAQ,EAAEE;MACd,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACHF,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACa,MAAM,CAAEN,OAAO,IAAKA,OAAO,CAACI,GAAG,KAAKb,MAAM,CAACG,OAAO,CAACU,GAAG;MACnF,CAAC;IACL;MACI,OAAOd,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMiB,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACnB,KAAK,EAAEoB,QAAQ,CAAC,GAAGzB,UAAU,CAACI,eAAe,EAAE;IAClDI,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,oBACIN,OAAA,CAACC,cAAc,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGtB,KAAK;MAAEoB;IAAS,CAAE;IAAAF,QAAA,EAClDA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAAP,EAAA,CAVYF,sBAAsB;AAAAU,EAAA,GAAtBV,sBAAsB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}